@page "/"

@using SharedLibrary

<div style="margin: 10vw;">
    <div class="left-view">
        <textarea style="height: 100%; width: 100%" @bind="DataStructure.BindableBase.Text" @bind:event="oninput"></textarea>
        <input type="button" value="Load >>" style="display: inline-block; width: 100%" @onclick="() => DataStructure.ProgramStoreC = Parser.ParseInstructions()" />
    </div>
    <div class="center-view">
        <table style="height: 100%">
            <tr style="height: 100%"></tr>

            @if (DataStructure.ProgramStoreC != null
                 && DataStructure.ProgramStoreC.Count > 0)
            {
                <tr>
                    <th><span style="color: white">></span></th>
                    <th>PC Address</th>
                    <th>Instruction</th>
                    <th>PC</th>
                    <th>FP</th>
                    <th style="background-color: darkgray">SP</th>
                    <th style="background-color: lightgray">EP</th>
                    <th>HP</th>
                </tr>
                foreach (Instruction instruction in DataStructure.ProgramStoreC)
                {
                    <tr>
                        <td>
                            @if (DataStructure.ProgramStoreC.IndexOf(instruction) == VirtualMachine.Registers.ProgramCounter)
                            {
                                <b>></b>
                            }
                        </td>
                        <td>@instruction.Address</td>
                        <td>@String.Join(' ', instruction.ValueWithArgs)</td>

                        @if (DataStructure.ProgramStoreC.IndexOf(instruction) == 0)
                        {
                            <td>@VirtualMachine.Registers.ProgramCounter</td>
                            <td>@VirtualMachine.Registers.FramePointer</td>
                            <td style="background-color: darkgray">@VirtualMachine.Registers.StackPointer</td>
                            <td style="background-color: lightgray">@VirtualMachine.Registers.ExtremePointer</td>
                            <td>@VirtualMachine.Registers.HeapPointer</td>
                        }
                        else
                        {
                            <td colspan="5"></td>
                        }
                    </tr>
                }
                <tr>
                <td colspan="8">
                <div style="margin: 2vw; text-align: center">
                    <input type="button" value="Restart" @onclick="() => VirtualMachine.Interpret(VirtualMachine.Move.Restart)"/>
                    <input type="button" value="Next" @onclick="() => VirtualMachine.Interpret(VirtualMachine.Move.Next)"/>
                    <input type="button" value="Run" @onclick="() => VirtualMachine.Interpret(VirtualMachine.Move.Run)"/>
                </div>
                </td >
                </tr >
            }
            else
            {
                <tr>
                    <td>No instructions loaded at this time.</td>
                </tr>
            }
        </table>
    </div>

    <div class="right-view">
        <table>
            <tr>
                <th>Address</th>
                <th>Value</th>
            </tr>
            @for (int i = DataStructure.HeapSize; i >= 0; i--)
            {
                <tr>
                    @{
                        string color = "white";

                        if (i <= VirtualMachine.Registers.ExtremePointer)
                        {
                            color = "lightgray";
                        }

                        if (i <= VirtualMachine.Registers.StackPointer)
                        {
                            color = "darkgray";
                        }
                    }

                    <td style="background-color: @color">@i</td>
                    <td style="background-color: @color">@DataStructure.MainMemoryS[i]</td>
                </tr>
            }
            <tr>
                <th>Address</th>
                <th>Value</th>
            </tr>
        </table>
    </div>
</div>